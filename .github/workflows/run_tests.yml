name: Running build and tests inside docker
on:
  push:
    branches:
      - docker_build
jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: checkout
#        uses: actions/checkout@v2
#        with:
#            fetch-depth: 1
#      - name: prepare
#        id: prepare
#        run: |
#               pwd
#               ln -sf WebKitBuild-Docker WebKitBuild
#               sudo chown -R 1000:1000 /home/runner/work/qtwebkit/qtwebkit
#               echo '/tmp/core-pid_%p-_-process_%E' | sudo tee /proc/sys/kernel/core_pattern
#               ulimit -c unlimited
#      - uses: docker://slapinid/qbat2-deps:latest
#        with:
#          args: pwd
#      - name: prebuild-prepare
#        id: prebuildprep
#        uses: docker://slapinid/qbat2-deps:latest
#        with:
#          args: /bin/tar xvf /home/build/qtwebkit-libs.tar.bz2
#      - name: prebuild-checks
#        id: prebuildcheck
#        run: |
#               pwd
#               cat /proc/sys/kernel/core_pattern
#               ls -l . WebKitBuild-Docker
#               find ./WebKitBuild-Docker -type f -name 'qmake*'
#               ulimit -c unlimited
#      - name: building
#        id: build
#        uses: docker://slapinid/qbat2-deps:latest
#        with:
#          args: /usr/bin/env NUMBER_OF_PROCESSORS=2 /bin/bash /build-qtwebkit-release.sh
#      - name: checking build
#        id: checkbuild
#        uses: docker://slapinid/qbat2-deps:latest
#        with:
#          args: /usr/bin/find ./WebKitBuild-Docker
#      - name: archive
#        id: archivebuild
#        uses: docker://slapinid/qbat2-deps:latest
#        with:
#          args: /usr/bin/env WEBKIT_OUTPUTDIR=WebKitBuild-Docker python Tools/BuildSlaveSupport/built-product-archive --platform qt --release archive
#        continue-on-error: true
#      - name: postbuild-checks
#        id: postbuildcheck
#        run: |
#               find . -type f -name release.zip
#      - uses: actions/upload-artifact@v2
#        with:
#          name: release-archive
#          path: WebKitBuild-Docker/release.zip
#      - name: post-build
#        id: postbuild
#        run: |
#               sudo chown -R $(id -u):$(id -g) /home/runner/work/qtwebkit/qtwebkit
#               ls -l WebKitBuild-Docker
#      - name: check-core-files
#        id: checkcores
#        run: |
#               ulimit -c
#               cat /proc/sys/kernel/core_pattern
#               find /home/runner/work/qtwebkit/qtwebkit -type f -name 'core*'
#        continue-on-error: true

  test:
#    needs: build
    runs-on: ubuntu-latest
#    container:
#      image: slapinid/qbat2-deps:latest
#      options: --ulimit core=-1 --user root
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
            fetch-depth: 1
      - name: download-qtwebkit
#        uses: actions/download-artifact@v2
        run: |
          ls
          mkdir -p WebKitBuild/Release
          cd WebKitBuild/Release
          curl https://0x0.st/ilnc.zip -o release.zip
          unzip release.zip
          pwd
          ls
      - name: prepare
        id: prepare
        run: |
               ln -sf WebKitBuild-Docker WebKitBuild
               sudo chown -R 1000:1000 /home/runner/work/qtwebkit/qtwebkit
               echo '/tmp/core-pid_%p-_-process_%E' | sudo tee /proc/sys/kernel/core_pattern
               ulimit -c unlimited
      - uses: docker://slapinid/qbat2-deps:latest
        with:
          args: ls WebKitBuild/Release
      - name: run-tests
        uses: docker://slapinid/qbat2-deps:latest
        with:
          args: /usr/bin/env WEBKIT_CORE_DUMPS_DIRECTORY=/tmp /bin/bash /run-tests.sh

#      - name: run-tests
#        run: |
#              ls -l . /
#              ulimit -c
#              echo '/tmp/core-pid_%p-_-process_%E' | sudo tee /proc/sys/kernel/core_pattern
#              cat /proc/sys/kernel/core_pattern
#              /usr/bin/env WEBKIT_CORE_DUMPS_DIRECTORY=/tmp /bin/bash /run-tests.sh
#              /usr/bin/env WEBKIT_OUTPUTDIR=WebKitBuild-Docker python Tools/BuildSlaveSupport/test-result-archive --platform qt --release archive
#              tar zcf core-archive.tar.gz /tmp/core*
#      - uses: actions/upload-artifact@v2
#        with:
#          name: test-results
#          path: layout-test-results.zip
#      - uses: actions/upload-artifact@v2
#        with:
#          name: test-results-coredump
#          path: core-archive.tar.gz
